rb <- read.csv("rb.csv")
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
library(MASS)
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wrlm2
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$X40.YD) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rb <- read.csv("RBs.csv")
rb
View(rb)
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
prosp <- read.csv('Prospects2020.csv')
prosp_rb <- subset(prosp, Position == "RB")
prosp_rb_full <- prosp_rb[is.na(prosp_rb$Forty) == FALSE, ]
prosp_rb_full <- prosp_rb_full[is.na(prosp_rb_full$ThreeCone) == FALSE, ]
prosp_rb_full <- prosp_rb_full[is.na(prosp_rb_full$Shuttle) == FALSE, ]
future <- as.data.frame(cbind(prosp_rb_full$X40.YD, prosp_rb_full$X3Cone, prosp_rb_full$Shuttle))
future <- as.data.frame(cbind(prosp_rb_full$Forty, prosp_rb_full$ThreeCone, prosp_rb_full$Shuttle))
names(future) <- c("Forty", "Cone",
"Shuttle")
prosp <- read.csv('Prospects2020.csv')
prosp_rb <- subset(prosp, Position == "RB")
prosp_rb_full <- prosp_rb[is.na(prosp_rb$Forty) == FALSE, ]
prosp_rb_full <- prosp_rb_full[is.na(prosp_rb_full$ThreeCone) == FALSE, ]
prosp_rb_full <- prosp_rb_full[is.na(prosp_rb_full$Shuttle) == FALSE, ]
future <- as.data.frame(cbind(prosp_rb_full$Forty, prosp_rb_full$ThreeCone, prosp_rb_full$Shuttle))
View(prosp)
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$Forty) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Weight) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Height) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Broad) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Bench) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$ThreeCone) == FALSE, ]
ollm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
summary(ollm2)
summary(stepAIC(object = ollm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
library(MASS)
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$Forty) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Weight) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Height) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Broad) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Bench) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$ThreeCone) == FALSE, ]
ollm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
summary(ollm2)
summary(stepAIC(object = ollm2, direction = c("backward")))
qb <- read.csv("QBs.csv")
qb.full <- qb[is.na(qb$Forty) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Weight) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Height) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Vert) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Broad) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Shuttle) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Wonderlic) == FALSE, ]
qblm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm2)
summary(stepAIC(object = qblm2, direction = c("backward")))
lm(AV16 ~ Broad + Vert, data = qb.full)
summary(lm(AV16 ~ Broad + Vert, data = qb.full))
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$X40.YD) == FALSE, ]
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$forty) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Weight) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Height) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$ThreeCone) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Broad) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Bench) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Shuttle) == FALSE, ]
ollm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
qb <- read.csv("QBs.csv")
qb.full <- qb[is.na(qb$Forty) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Weight) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Height) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Vert) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Broad) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Shuttle) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Wonderlic) == FALSE, ]
qblm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm2)
summary(stepAIC(object = qblm2, direction = c("backward")))
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$Forty) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Weight) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Height) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$ThreeCone) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Broad) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Bench) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Shuttle) == FALSE, ]
ollm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
summary(ollm2)
summary(stepAIC(object = ollm2, direction = c("backward")))
ol <- read.csv("OLs.csv")
ol.full <- ol[is.na(ol$Forty) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Weight) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Height) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$ThreeCone) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Broad) == FALSE, ]
ol.full <- ol.full[is.na(ol.full$Bench) == FALSE, ]
ollm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
summary(ollm2)
summary(stepAIC(object = ollm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Shuttle + Broad + Bench + Weight + Height,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Shuttle + Broad + Bench + Weight + Height,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Broad + Bench + Weight + Height,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Broad + Bench + Weight + Height,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Broad + Bench,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Broad + Bench,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wrlm2 <- lm(AV16 ~ Forty + ThreeCone + Broad,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
dl <- read.csv("dls.csv")
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Height) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Bench) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Shuttle) == FALSE, ]
dllm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = dl.full)
summary(dllm2)
summary(stepAIC(object = dllm2, direction = c("backward")))
# Load in position CSV
dl <- read.csv("dls.csv")
# Subset data to remove NA
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Bench) == FALSE, ]
# Full linear model
dllm2 <- lm(AV16 ~ Weight + Forty + ThreeCone + Broad + Bench,
data = dl.full)
summary(dllm2)
# Variable selection
summary(stepAIC(object = dllm2, direction = c("backward")))
dl <- read.csv("dls.csv")
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Bench) == FALSE, ]
dllm2 <- lm(AV16 ~ Weight + Forty + ThreeCone + Broad + Bench,
data = dl.full)
summary(dllm2)
dl <- read.csv("dls.csv")
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dllm2 <- lm(AV16 ~ Weight + Forty + ThreeCone + Broad,
data = dl.full)
summary(dllm2)
dl <- read.csv("dls.csv")
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Height) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dllm2 <- lm(AV16 ~ Weight + Forty + ThreeCone + Broad,
data = dl.full)
summary(dllm2)
dl <- read.csv("dls.csv")
dl.full <- dl[is.na(dl$Forty) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Height) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Weight) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$ThreeCone) == FALSE, ]
dl.full <- dl.full[is.na(dl.full$Broad) == FALSE, ]
dllm2 <- lm(AV16 ~ Weight + Forty + ThreeCone + Broad + Height,
data = dl.full)
summary(dllm2)
summary(stepAIC(object = dllm2, direction = c("backward")))
qb <- read.csv("QBs.csv")
qb.full <- qb[is.na(qb$Forty) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Weight) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Height) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Vert) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Broad) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Shuttle) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Wonderlic) == FALSE, ]
qblm2 <- lm(AV16 ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm2)
summary(stepAIC(object = qblm2, direction = c("backward")))
lb <- read.csv("lbs.csv")
lb.full <- lb[is.na(lb$Forty) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$Weight) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$Height) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$ThreeCone) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$Broad) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$Bench) == FALSE, ]
lb.full <- lb.full[is.na(lb.full$Shuttle) == FALSE, ]
lblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = lb.full)
summary(lblm2)
summary(stepAIC(object = lblm2, direction = c("backward")))
db <- read.csv("dbs.csv")
db.full <- db[is.na(db$Forty) == FALSE, ]
db.full <- db.full[is.na(db.full$Weight) == FALSE, ]
db.full <- db.full[is.na(db.full$Height) == FALSE, ]
db.full <- db.full[is.na(db.full$ThreeCone) == FALSE, ]
db.full <- db.full[is.na(db.full$Broad) == FALSE, ]
db.full <- db.full[is.na(db.full$Bench) == FALSE, ]
db.full <- db.full[is.na(db.full$Shuttle) == FALSE, ]
dblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = db.full)
summary(dblm2)
summary(stepAIC(object = dblm2, direction = c("backward")))
te <- read.csv("tes.csv")
te.full <- te[is.na(te$Forty) == FALSE, ]
te.full <- te.full[is.na(te.full$Weight) == FALSE, ]
te.full <- te.full[is.na(te.full$Height) == FALSE, ]
te.full <- te.full[is.na(te.full$ThreeCone) == FALSE, ]
te.full <- te.full[is.na(te.full$Broad) == FALSE, ]
te.full <- te.full[is.na(te.full$Bench) == FALSE, ]
te.full <- te.full[is.na(te.full$Shuttle) == FALSE, ]
telm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = te.full)
summary(telm2)
summary(stepAIC(object = telm2, direction = c("backward")))
View(qb)
qb <- read.csv("QBs.csv")
qb.full <- qb[is.na(qb$Forty) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Weight) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Height) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Vert) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Broad) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Shuttle) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Wonderlic) == FALSE, ]
qblm2 <- lm(PickNumber ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
qb <- read.csv("QBs.csv")
qb.full <- qb[is.na(qb$Forty) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Weight) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Height) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Vert) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Broad) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Shuttle) == FALSE, ]
qb.full <- qb.full[is.na(qb.full$Wonderlic) == FALSE, ]
qblm2 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm2)
summary(stepAIC(object = qblm2, direction = c("backward")))
qblm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm3)
summary(stepAIC(object = qblm3, direction = c("backward")))
qblm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = qb.full)
summary(qblm3)
summary(stepAIC(object = qblm3, direction = c("backward")))
rblm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = rb.full)
summary(rblm3)
summary(stepAIC(object = rblm3, direction = c("backward")))
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
rblm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = rb.full)
summary(rblm3)
summary(stepAIC(object = rblm3, direction = c("backward")))
wrlm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = wr.full)
summary(wrlm3)
summary(stepAIC(object = wrlm3, direction = c("backward")))
rblm2 <- lm(Pick.Number ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
wrlm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Vert + Shuttle + Wonderlic,
data = wr.full)
rblm2 <- lm(Pick.Number ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
wrlm2 <- lm(Pick.Number ~ Forty + ThreeCone + Broad,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
telm3 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = te.full)
summary(telm3)
summary(stepAIC(object = telm3, direction = c("backward")))
# Full linear model
wrlm3 <- lm(Pick.Number ~ Forty + ThreeCone + Broad,
data = wr.full)
summary(wrlm3)
# Variable selection
summary(stepAIC(object = wrlm3, direction = c("backward")))
# sig = 40yd
telm3 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = te.full)
summary(telm3)
summary(stepAIC(object = telm3, direction = c("backward")))
telm3 <- lm(Pick.Number ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = te.full)
summary(telm3)
summary(stepAIC(object = telm3, direction = c("backward")))
ollm3 <- lm(Pick.Number ~ Height + Weight + Forty + Broad + Bench + ThreeCone,
data = ol.full)
summary(ollm3)
summary(stepAIC(object = ollm3, direction = c("backward")))
dllm3 <- lm(Pick.Number ~ Weight + Forty + ThreeCone + Broad + Height,
data = dl.full)
summary(dllm3)
summary(stepAIC(object = dllm3, direction = c("backward")))
lblm3 <- lm(Pick.Number ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = lb.full)
summary(lblm3)
summary(stepAIC(object = lblm3, direction = c("backward")))
dblm3 <- lm(Pick.Number ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = db.full)
summary(dblm3)
summary(stepAIC(object = dblm3, direction = c("backward")))
