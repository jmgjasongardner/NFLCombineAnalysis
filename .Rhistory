head(years)
source1 <- read.csv('players-source-1.csv')
source2 <- read.csv('players-source-1.csv')
library(dplyr)
head(source1)
head(source2)
source2 <- read.csv('players-source-2.csv')
source2 <- read.csv('players-source-2.csv')
head(source2)
source1['Birthday'] <- NULL
source2['Birthday'] <- NULL
head(source2)
head(source1)
players <- rbind(source1, source2)
players <- distinct(players)
players <- rbind(source1, source2)
players <- distinct(players)
?distinct
players <- distinct(players, PlayerId)
head(players)
players <- distinct(players, PlayerId, .keep_all = TRUE)
players <- rbind(source1, source2)
players <- distinct(players, PlayerId, .keep_all = TRUE)
head(players)
View(players)
View(years)
money <- left_join(years, players)
head(money)
money <- left_join(years, players)
money %>%
group_by(year) %>%
summarise(TotalMoney, funs(mean))
?summarise
money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
year_means <- money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
head(year_means)
money <- left_join(money, year_means)
head(money)
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn)
head(money)
money <- left_join(years, players)
year_means <- money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
money <- left_join(money, year_means)
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn) %>%
select(FirstName, LastName, TotalMoney, Ratio)
arrange(Ratio)
money <- left_join(years, players)
year_means <- money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
money <- left_join(money, year_means)
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn) %>%
select(FirstName, LastName, TotalMoney, Ratio) %>%
arrange(Ratio)
money
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn) %>%
select(FirstName, LastName, TotalMoney, Ratio) %>%
arrange(desc(Ratio))
money <- left_join(years, players)
year_means <- money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
money <- left_join(money, year_means)
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn) %>%
select(FirstName, LastName, TotalMoney, Ratio) %>%
arrange(desc(Ratio))
money
money <- left_join(years, players)
year_means <- money %>%
group_by(year) %>%
summarise(mean_earn = mean(TotalMoney))
money <- left_join(money, year_means)
money <- money %>%
mutate(Ratio = TotalMoney/mean_earn) %>%
select(FirstName, LastName, TotalMoney, year, Ratio) %>%
arrange(desc(Ratio))
money[1:20, ]
typeof(money)
?sarima
??sarima
setwd("~/15th Grade/STAT 411/NFLCombineAnalysis")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv('DataUpdate1.csv')
head(dat)
library(dplyr)
have_played <- dat %>%
filter(Year != 2020)
nrow(dat)-nrow(have_played)
print(temi)
if (is.na(have_played['ProBowls'])){
print(temi)
}
print('temi')
if (is.na(have_played['ProBowls'])){
print('temi')
}
have_played
for (i in nrow(have_played)){
if (is.na(have_played$ProBowls[i])){
have_played$ProBowls[i]=0
}
if (is.na(have_played$AllPros[i])){
have_played$AllPros[i]=0
}
}
slice(have_played, 1000, 1050)
have_played[1000:1050,]
is.na(have_played$ProBowls)
i=1050
is.na(have_played$AllPros[i])
have_played$AllPros[i]=0
is.na(have_played$AllPros[i])
have_played$AllPros[i]=0
dat <- read.csv('DataUpdate1.csv')
have_played <- dat %>%
filter(Year != 2020)
for (i in 1:nrow(have_played)){
if (is.na(have_played$ProBowls[i])){
have_played$ProBowls[i]=0
}
if (is.na(have_played$AllPros[i])){
have_played$AllPros[i]=0
}
}
have_played[1000:1050,]
have_played <- have_played %>%
mutate(success = ProBowls + 2*AllPros)
have_played
have_played <- have_played %>%
mutate(Success = ProBowls + 2*AllPros) %>%
arrange(desc(Success))
have_played
head(success)
head(have_played)
knitr::opts_chunk$set(echo = TRUE)
ap_df <- ap_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'AllPros')) %>%
rename(replace = c('Player' = 'Name'))
combine <- read.csv('DataOriginal.csv')
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('Pos', 'Player')
colnames(ap_df) <- c('Pos', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(doc)
}
library(XML)
library(RCurl)
library(stringr)
library(tidyr)
library(plyr)
library(dplyr)
combine <- read.csv('DataOriginal.csv')
#three_names = combine[str_count(combine$Name, " ") >= 2, ]
#three_names$Name
#combine = combine[!str_count(combine$Name, " ") >= 2, ]
#combine = separate(combine, Name, c('First','Last'), ' ')
#combine$url = paste0('/', substr(combine$Last, 1, 1), '/', substr(combine$Last, 1, 4), substr(combine$First[1], 1, 2), toString(0), toString(0), '.htm')
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('Pos', 'Player')
colnames(ap_df) <- c('Pos', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(doc)
}
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('Pos', 'Player')
colnames(ap_df) <- c('Pos', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(pb)
free(ap)
}
pb_df = pb_df[2:nrow(pb_df),]
ap_df = ap_df[2:nrow(ap_df),]
for (i in 1:nrow(pb_df)){
pb_df$Player[i]=str_remove(pb_df$Player[i], '%')
pb_df$Player[i]=str_remove(pb_df$Player[i], "[+]")
}
for (i in 1:nrow(ap_df)){
ap_df$Player[i]=str_remove(ap_df$Player[i], '%')
ap_df$Player[i]=str_remove(ap_df$Player[i], "[+]")
}
pb_df %>%
count(vars=c('Pos', 'Player'))
?left_join
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls')) %>%
rename(replace = c('Player' = 'Name'))
combine = left_join(combine, pb_df, by=c('Name','Pos'))
combine = left_join(combine, pb_df, by=c('Name','POS'='Pos'))
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls')) %>%
rename(replace = c('Player' = 'Name'))
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('POS', 'Player')
colnames(ap_df) <- c('POS', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(pb)
free(ap)
}
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('POS', 'Player')
colnames(ap_df) <- c('POS', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$POS = as.character(pb_tab$POS)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$POS = as.character(ap_tab$POS)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(pb)
free(ap)
}
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('Pos', 'Player')
colnames(ap_df) <- c('Pos', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(pb)
free(ap)
}
pb_df = pb_df[2:nrow(pb_df),]
ap_df = ap_df[2:nrow(ap_df),]
for (i in 1:nrow(pb_df)){
pb_df$Player[i]=str_remove(pb_df$Player[i], '%')
pb_df$Player[i]=str_remove(pb_df$Player[i], "[+]")
}
for (i in 1:nrow(ap_df)){
ap_df$Player[i]=str_remove(ap_df$Player[i], '%')
ap_df$Player[i]=str_remove(ap_df$Player[i], "[+]")
}
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls')) %>%
rename(replace = c('Player' = 'Name'))
combine = left_join(combine, pb_df, by=c('Name','POS'='Pos'))
ap_df <- ap_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'AllPros')) %>%
rename(replace = c('Player' = 'Name'))
combine = left_join(combine, ap_df, by=c('Name','POS'='Pos'))
combine['Pos.x'] <- NULL
combine['Pos.y'] <- NULL
names(combine) = c('Year', 'Name', 'College', 'Position', 'Height', 'Weight', 'Wonderlic', '40YD', 'Bench', 'Vert', 'Broad', 'Shuttle', '3Cone', 'ProBowls', 'AllPros')
write.csv(combine, 'DataUpdate1.csv')
dat <- read.csv('DataUpdate1.csv')
have_played <- dat %>%
filter(Year != 2020)
for (i in 1:nrow(have_played)){
if (is.na(have_played$ProBowls[i])){
have_played$ProBowls[i]=0
}
if (is.na(have_played$AllPros[i])){
have_played$AllPros[i]=0
}
}
have_played <- have_played %>%
mutate(Success = ProBowls + 2*AllPros) %>%
arrange(desc(Success))
have_played
head(have_played)
have_played[6:12,]
have_played[6:25,]
combine
combine %>% arrange(ProBowls)
combine %>% arrange(-ProBowls)
combine <- read.csv('DataOriginal.csv')
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls')) %>%
rename(replace = c('Player' = 'Name'))
pb_df
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls'))
library(XML)
library(RCurl)
library(stringr)
library(tidyr)
library(plyr)
library(dplyr)
combine <- read.csv('DataOriginal.csv')
#three_names = combine[str_count(combine$Name, " ") >= 2, ]
#three_names$Name
#combine = combine[!str_count(combine$Name, " ") >= 2, ]
#combine = separate(combine, Name, c('First','Last'), ' ')
#combine$url = paste0('/', substr(combine$Last, 1, 1), '/', substr(combine$Last, 1, 4), substr(combine$First[1], 1, 2), toString(0), toString(0), '.htm')
pb_df <- data.frame(matrix(ncol = 2, nrow = 1))
ap_df <- data.frame(matrix(ncol = 2, nrow = 1))
colnames(pb_df) <- c('Pos', 'Player')
colnames(ap_df) <- c('Pos', 'Player')
for (year in 1987:2019){
#u <- paste0("https://www.pro-football-reference.com/players/", combine$url[i])
u <- paste0("https://www.pro-football-reference.com/years/", year, "/probowl.htm")
y <- paste0("https://www.pro-football-reference.com/years/", year, "/allpro.htm")
download.file(u, destfile = paste0("probowlers.html"))
download.file(y, destfile = paste0("allpros.html"))
pb <- htmlParse("probowlers.html")
ap <- htmlParse("allpros.html")
pb_tab <- readHTMLTable(pb)
pb_tab <- pb_tab[[1]]
pb_tab <- pb_tab[,1:2]
ap_tab <- readHTMLTable(ap)
ap_tab <- ap_tab[[1]]
ap_tab <- ap_tab[,1:2]
pb_tab$Pos = as.character(pb_tab$Pos)
pb_tab$Player = as.character(pb_tab$Player)
ap_tab$Pos = as.character(ap_tab$Pos)
ap_tab$Player = as.character(ap_tab$Player)
pb_df = rbind(pb_df, pb_tab)
ap_df = rbind(ap_df, ap_tab)
free(pb)
free(ap)
}
pb_df = pb_df[2:nrow(pb_df),]
ap_df = ap_df[2:nrow(ap_df),]
for (i in 1:nrow(pb_df)){
pb_df$Player[i]=str_remove(pb_df$Player[i], '%')
pb_df$Player[i]=str_remove(pb_df$Player[i], "[+]")
}
for (i in 1:nrow(ap_df)){
ap_df$Player[i]=str_remove(ap_df$Player[i], '%')
ap_df$Player[i]=str_remove(ap_df$Player[i], "[+]")
}
head(ap_df)
pb_df <- pb_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'ProBowls')) %>%
rename(replace = c('Player' = 'Name'))
head(pb_df)
pb_df %>% arrange(-ProBowls)
ap_df <- ap_df %>%
count(vars=c('Pos', 'Player')) %>%
rename(replace = c('freq' = 'AllPros')) %>%
rename(replace = c('Player' = 'Name'))
ap_df %>% arrange(-AllPros)
combine = left_join(combine, pb_df, by=c('Name','POS'='Pos'))
combine = left_join(combine, ap_df, by=c('Name','POS'='Pos'))
names(combine)
combine %>% arrange(-ProBowls)
view(combine)
combine %>% view()
View(combine)
tem=c('Year', 'Name', 'College', 'Position', 'Height', 'Weight', 'Wonderlic', '40YD', 'Bench', 'Vert', 'Broad', 'Shuttle', '3Cone', 'ProBowls', 'AllPros')
names(combine) = c('Year', 'Name', 'College', 'Position', 'Height', 'Weight', 'Wonderlic', '40YD', 'Bench', 'Vert', 'Broad', 'Shuttle', '3Cone', 'ProBowls', 'AllPros')
write.csv(combine, 'DataUpdate1.csv')
dat <- read.csv('DataUpdate1.csv')
View(dat)
have_played <- dat %>%
filter(Year != 2020)
View(have_played)
?write.csv
write.csv(combine, 'DataUpdate1.csv', row.names = FALSE)
dat <- read.csv('DataUpdate1.csv')
have_played <- dat %>%
filter(Year != 2020)
for (i in 1:nrow(have_played)){
if (is.na(have_played$ProBowls[i])){
have_played$ProBowls[i]=0
}
if (is.na(have_played$AllPros[i])){
have_played$AllPros[i]=0
}
}
View(have_played)
have_played <- have_played %>%
mutate(Success = ProBowls + 2*AllPros) %>%
arrange(desc(Success))
View(have_played)
write.csv (have_played, 'havePlayed.csv')
qbs <- filter (have_played, Position == 'QB')
pfm <- filter (have_played, Name == 'Peyton Manning')
pfg
pfm
lm(Success ~ Wonderlic, data = qbs)
plot(Wonderlic, Success, data = qbs)
plot(qbs$Wonderlic, qbs$Success)
max(qbs$Wonderlic)
max(!is.na(qbs$Wonderlic))
max(qbs$Wonderlic[!is.na(qbs$Wonderlic)])
which(qbs$Wonderlic[!is.na(qbs$Wonderlic)])
which.max(qbs$Wonderlic[!is.na(qbs$Wonderlic)])
qbs[121,]
which(qbs$Wonderlic==48)
qbs[396,]
plot(qbs$Height, qbs$Success)
lm(Success ~ Wonderlic + Height + Weight, data = qbs)
