2455, 2540, 2562, 2604, 2621, 2721, 2768, 2782, 2800, 2897, 2916,
3028, 3809, 3523, 3653, 3736, 3799), -c(6:8, 14)]
colnames(Data) <- c("Draft Year", "Team", "Pick Round", "Pick Number", "PlayerID",
"Games Played", "Total AV", "AV Per 16", "Name", "Position",
"College", "Height", "Weight", "Wonderlic", "40YD", "Bench",
"Vert", "Broad", "Shuttle", "3Cone", "Pro Bowls", "All Pro")
View(DataUpdate1)
View(AVPlayers)
AVPlayers <- read.csv("AVPlayers.csv")
DataUpdate1 <- read.csv("DataUpdate1.csv")
DataUpdate1$Position <- as.character(DataUpdate1$Position)
AVPlayers$position <- as.character(AVPlayers$position)
AVPlayers$Name <- AVPlayers$full_name
AVPlayers$Position <- AVPlayers$position
AVPlayers <- AVPlayers[, -c(1, 7, 8, 12, 13)]
View(AVPlayers)
AVPlayers <- read.csv("AVPlayers.csv")
DataUpdate1 <- read.csv("DataUpdate1.csv")
DataUpdate1$Position <- as.character(DataUpdate1$Position)
AVPlayers$position <- as.character(AVPlayers$position)
AVPlayers$Name <- AVPlayers$full_name
AVPlayers$Position <- AVPlayers$position
AVPlayers <- AVPlayers[, -c(1, 7, 8, 12, 13)]
colnames(DataUpdate1) <- c("Draft Year", "Name", "College", "Position", "Height",
"Weight", "Wonderlic", "40 YD", "Bench", "Vert", "Broad",
"Shuttle", "3Cone", "Pro Bowls", "All Pros")
colnames(AVPlayers) <- c("Season", "Team", "Draft Round", "Pick Number", "PlayerID",
"Side", "Category", "position", "Games", "Avg Value", "AV16",
"Name", "Position")
for(val in 1:length(DataUpdate1$Position)) {
if(DataUpdate1$Position[val] == "OT") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "OG") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "C") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "ILB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "OLB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "FS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "SS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "CB") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "DE") {
DataUpdate1$Position[val] <- "DL"
}
if(DataUpdate1$Position[val] == "DT") {
DataUpdate1$Position[val] <- "DL"
}
}
for(val in 1:length(AVPlayers$Position)) {
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "ILB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "NT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "T") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "G") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "DE") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "DT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "CB") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "FS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "SS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "S") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "C") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OT") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "LS") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "FB") {
AVPlayers$Position[val] <- "RB"
}
}
Data <- join(AVPlayers, DataUpdate1, by = c("Name", "Position"))
Data <- Data[-c(56, 151, 248, 354, 416, 419, 477, 661, 663, 722, 916, 985,
989:990, 1060, 1019, 1357, 1381, 1433, 1441, 1469, 1697, 1753,
1771, 1803, 1810:1811, 1845, 1873, 1930, 2043, 2050, 2107, 2190,
2455, 2540, 2562, 2604, 2621, 2721, 2768, 2782, 2800, 2897, 2916,
3028, 3809, 3523, 3653, 3736, 3799), -c(6:8, 14)]
View(Data)
AVPlayers <- read.csv("AVPlayers.csv")
DataUpdate1 <- read.csv("DataUpdate1.csv")
DataUpdate1$Position <- as.character(DataUpdate1$Position)
AVPlayers$position <- as.character(AVPlayers$position)
AVPlayers$Name <- AVPlayers$full_name
AVPlayers$Position <- AVPlayers$position
AVPlayers <- AVPlayers[, -c(1, 7, 8, 12, 13)]
colnames(DataUpdate1) <- c("Season", "Name", "College", "Position", "Height",
"Weight", "Wonderlic", "40 YD", "Bench", "Vert", "Broad",
"Shuttle", "3Cone", "Pro Bowls", "All Pros")
colnames(AVPlayers) <- c("Draft Year", "Team", "Draft Round", "Pick Number", "PlayerID",
"Side", "Category", "position", "Games", "Avg Value", "AV16",
"Name", "Position")
for(val in 1:length(DataUpdate1$Position)) {
if(DataUpdate1$Position[val] == "OT") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "OG") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "C") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "ILB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "OLB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "FS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "SS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "CB") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "DE") {
DataUpdate1$Position[val] <- "DL"
}
if(DataUpdate1$Position[val] == "DT") {
DataUpdate1$Position[val] <- "DL"
}
}
for(val in 1:length(AVPlayers$Position)) {
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "ILB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "NT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "T") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "G") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "DE") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "DT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "CB") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "FS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "SS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "S") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "C") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OT") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "LS") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "FB") {
AVPlayers$Position[val] <- "RB"
}
}
Data <- join(AVPlayers, DataUpdate1, by = c("Name", "Position"))
Data <- Data[-c(56, 151, 248, 354, 416, 419, 477, 661, 663, 722, 916, 985,
989:990, 1060, 1019, 1357, 1381, 1433, 1441, 1469, 1697, 1753,
1771, 1803, 1810:1811, 1845, 1873, 1930, 2043, 2050, 2107, 2190,
2455, 2540, 2562, 2604, 2621, 2721, 2768, 2782, 2800, 2897, 2916,
3028, 3809, 3523, 3653, 3736, 3799), -c(6:8, 14)]
write.csv(Data, "DataUpdate3.csv")
View(Data)
Data20 <- subset(DataUpdate1, `Draft Year` = 2020)
View(Data20)
library(plyr)
library(dplyr)
AVPlayers <- read.csv("AVPlayers.csv")
DataUpdate1 <- read.csv("DataUpdate1.csv")
DataUpdate1$Position <- as.character(DataUpdate1$Position)
AVPlayers$position <- as.character(AVPlayers$position)
AVPlayers$Name <- AVPlayers$full_name
AVPlayers$Position <- AVPlayers$position
AVPlayers <- AVPlayers[, -c(1, 7, 8, 12, 13)]
colnames(DataUpdate1) <- c("Season", "Name", "College", "Position", "Height",
"Weight", "Wonderlic", "40 YD", "Bench", "Vert", "Broad",
"Shuttle", "3Cone", "Pro Bowls", "All Pros")
colnames(AVPlayers) <- c("Draft Year", "Team", "Draft Round", "Pick Number", "PlayerID",
"Side", "Category", "position", "Games", "Avg Value", "AV16",
"Name", "Position")
for(val in 1:length(DataUpdate1$Position)) {
if(DataUpdate1$Position[val] == "OT") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "OG") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "C") {
DataUpdate1$Position[val] <- "OL"
}
if(DataUpdate1$Position[val] == "ILB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "OLB") {
DataUpdate1$Position[val] <- "LB"
}
if(DataUpdate1$Position[val] == "FS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "SS") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "CB") {
DataUpdate1$Position[val] <- "DB"
}
if(DataUpdate1$Position[val] == "DE") {
DataUpdate1$Position[val] <- "DL"
}
if(DataUpdate1$Position[val] == "DT") {
DataUpdate1$Position[val] <- "DL"
}
}
for(val in 1:length(AVPlayers$Position)) {
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "ILB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "NT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "T") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "G") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OLB") {
AVPlayers$Position[val] <- "LB"
}
if(AVPlayers$Position[val] == "DE") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "DT") {
AVPlayers$Position[val] <- "DL"
}
if(AVPlayers$Position[val] == "CB") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "FS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "SS") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "S") {
AVPlayers$Position[val] <- "DB"
}
if(AVPlayers$Position[val] == "C") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "OT") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "LS") {
AVPlayers$Position[val] <- "OL"
}
if(AVPlayers$Position[val] == "FB") {
AVPlayers$Position[val] <- "RB"
}
}
Data <- join(AVPlayers, DataUpdate1, by = c("Name", "Position"))
Data <- Data[-c(56, 151, 248, 354, 416, 419, 477, 661, 663, 722, 916, 985,
989:990, 1060, 1019, 1357, 1381, 1433, 1441, 1469, 1697, 1753,
1771, 1803, 1810:1811, 1845, 1873, 1930, 2043, 2050, 2107, 2190,
2455, 2540, 2562, 2604, 2621, 2721, 2768, 2782, 2800, 2897, 2916,
3028, 3809, 3523, 3653, 3736, 3799), -c(6:8, 14)]
View(DataUpdate1)
View(Data)
View(Data20)
Data20 <- subset(DataUpdate1, `Season` = 2020)
View(Data20)
Data20 <- subset(DataUpdate1, Season = 2020)
Data20 <- subset(DataUpdate1, Season == 2020)
View(Data20)
write.csv(Data20, "Prospects2020.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
curr <- read.csv('DataUpdate3.csv')
prosp <- read.csv('Prospects2020.csv')
dim(curr)
dim(prosp)
head(curr)
head(prosp)
curr$X <- NULL
curr <- curr %>%
select(c(9:11, 1:8, everything())) %>%
rename(Forty = X40.YD,
ThreeCone = X3Cone) %>%
filter (Games >= 8) %>%
arrange(-AV16, Name)
write.csv(curr, 'DataUpdate4.csv')
qb <- filter(curr, Position == 'QB')
write.csv(qb, 'QBs.csv')
rb <- filter(curr, Position == 'RB')
write.csv(rb, 'RBs.csv')
wr <- filter(curr, Position == 'WR')
write.csv(wr, 'WRs.csv')
te <- filter(curr, Position == 'TE')
write.csv(te, 'TEs.csv')
ol <- filter(curr, Position == 'OL')
write.csv(ol, 'OLs.csv')
kick <- filter(curr, Position == 'K')
write.csv(kick, 'Kickers.csv')
punt <- filter(curr, Position == 'P')
write.csv(punt, 'Punters.csv')
dl <- filter(curr, Position == 'DL')
write.csv(dl, 'DLs.csv')
lb <- filter(curr, Position == 'LB')
write.csv(lb, 'LBs.csv')
db <- filter(curr, Position == 'DB')
write.csv(db, 'DBs.csv')
genlm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = curr)
summary(genlm)
qblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = qb)
summary(qblm)
rblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = rb)
summary(rblm)
wrlm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = wr)
summary(wrlm)
telm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = te)
summary(telm)
ollm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = ol)
summary(ollm)
dllm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = dl)
summary(dllm)
lblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = lb)
summary(lblm)
dblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = db)
summary(dblm)
qblm <- lm(AV16 ~ Height, data = qb)
summary(qblm)
rblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = rb)
summary(rblm)
wrlm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle, data = wr)
summary(wrlm)
telm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad, data = te)
summary(telm)
ollm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = ol)
summary(ollm)
dllm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad, data = dl)
summary(dllm)
lblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = lb)
summary(lblm)
dblm <- lm(AV16 ~ Height + Weight + Wonderlic + Forty + Bench + Vert + Broad + Shuttle + ThreeCone, data = db)
summary(dblm)
library(MASS)
?stepAIC
stepAIC(object = dblm, direction = c("both"))
stepAIC(object = dblm, direction = c("backward"))
dblm
summary(dblm)
stepAIC(object = qblm, direction = c("backward"))
qblm
summary(qblm)
rblm
stepAIC(object = rblm, direction = c("backward"))
View(rb)
rb.full <- rb[is.na(rb$Height) == FALSE]
rb.full <- rb[is.na(rb$Height) == FALSE, ]
View(rb.full)
rblm2 <- lm(AV16 ~ Height, data = rb.full)
summary(rblm2)
rb.full <- rb[is.na(rb$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Forty) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty, data = rb.full)
summary(rblm2)
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty, data = rb.full)
summary(rblm2)
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone, data = rb.full)
summary(rblm2)
rb.full <- rb[is.na(rb$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Forty) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone, data = rb.full)
summary(rblm2)
rblm2 <- lm(AV16 ~ Height + Weight + Forty, data = rb.full)
summary(rblm2)
rblm2 <- lm(AV16 ~ Forty, data = rb.full)
summary(rblm2)
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rblm2 <- lm(AV16 ~ Forty, data = rb.full)
summary(rblm2)
View(rb.full)
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rblm2 <- lm(AV16 ~ Forty, data = rb.full)
summary(rblm2)
rblm2 <- lm(AV16 ~ Forty + Broad, data = rb.full)
summary(rblm2)
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Forty + Broad, data = rb.full)
summary(rblm2)
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("forward"))
summary(stepAIC(object = rblm2, direction = c("forward")))
summary(stepAIC(object = rblm2, direction = c("backward")))
rb <- read.csv("rb.csv")
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
library(MASS)
rb <- read.csv("RBs.csv")
rb.full <- rb[is.na(rb$Forty) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Weight) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Height) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$ThreeCone) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Broad) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Bench) == FALSE, ]
rb.full <- rb.full[is.na(rb.full$Shuttle) == FALSE, ]
rblm2 <- lm(AV16 ~ Height + Weight + Forty + ThreeCone + Broad + Bench + Shuttle,
data = rb.full)
summary(rblm2)
summary(stepAIC(object = rblm2, direction = c("backward")))
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
wrlm2
wr <- read.csv("WRs.csv")
wr.full <- wr[is.na(wr$Forty) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$ThreeCone) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Shuttle) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Weight) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Height) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Broad) == FALSE, ]
wr.full <- wr.full[is.na(wr.full$Bench) == FALSE, ]
wrlm2 <- lm(All.Pros ~ Forty + ThreeCone + Shuttle,
data = wr.full)
summary(wrlm2)
summary(stepAIC(object = wrlm2, direction = c("backward")))
